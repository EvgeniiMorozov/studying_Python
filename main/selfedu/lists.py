# Lists ( списки )

# Создание списков

# 1. Задать через квадратные скобки []
l1 = [1, 2, 3, 'hello', ['test', 10], 'world', True]

# print(type(l1))  # <class 'list'>
# print(l1)  # [1, 2, 3, 'hello', ['test', 10], 'world', True]

# 2. с помощью функции list, передав её на вход иттерируемую последовательность

l2 = list('hello')  # на вход list передали иттерируемую последовательность

# print(l1, l2, sep='\n')
# [1, 2, 3, 'hello', ['test', 10], 'world', True]
# ['h', 'e', 'l', 'l', 'o']

l3 = list((1, 2, 3))  # (1, 2, 3) - кортеж

# print(l1, l2, l3, sep='\n')
# [1, 2, 3, 'hello', ['test', 10], 'world', True]
# ['h', 'e', 'l', 'l', 'o']
# [1, 2, 3]

# 3. использовать "генератор списков" (функция range или цикл for)

l4 = [i for i in 'world']
# print(l1, l2, l3, l4, sep='\n')
# [1, 2, 3, 'hello', ['test', 10], 'world', True]
# ['h', 'e', 'l', 'l', 'o']
# [1, 2, 3]
"""
Преимуществом генератора списка над функцией list является то, что в процессе
генерации списка, мы можем совершать действия над ним.
"""

l5 = [i for i in 'hello world' if i != ' ']

# print(l5)
# ['h', 'e', 'l', 'l', 'o', 'w', 'o', 'r', 'l', 'd']  - в процессе сборки списка убрали пробел

l5 = [i for i in 'hello world' if i not in ['a', 'e', 'i', 'o', 'u', ' ']]
# print(l5)
# ['h', 'l', 'l', 'w', 'r', 'l', 'd']  - убрали пробелы и гласные буквы
l5 = [i*2 for i in 'hello world' if i not in ['a', 'e', 'i', 'o', 'u', ' ']]
# print(l5)
# ['hh', 'll', 'll', 'ww', 'rr', 'll', 'dd'] - отсортировали согласные и продублировали их

# print(range(10))  # range(0, 10)
# print(list(range(10)))  # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
# print(list(range(1, 11)))  # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# print(list(range(0, 11, 2)))  # [0, 2, 4, 6, 8, 10]

# l6 = list(range(0, 11))
# print(l6)

for i in range(1, 3):
    print(f'внешний цикл #{i}')
    for j in range(1, 3):
        print(f'\tвнутренний цикл #{j}')

# внешний цикл #1
# 	внутренний цикл #1
# 	внутренний цикл #2
# внешний цикл #2
# 	внутренний цикл #1
# 	внутренний цикл #2
